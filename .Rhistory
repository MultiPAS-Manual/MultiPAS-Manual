filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 20, ylab = 'Diameter (nm)', xlab = 'Time', zlab = 'Count')
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 20, ylab = 'Diameter (nm)', xlab = 'Time')
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 20, ylab = 'Diameter (nm)', xlab = 'Time', main = 'Particle Concentration vs. Time and Diamter')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 20, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter')
contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 20, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(0, 400))
contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 20, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(0, 400), nlevels=10)
contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(20), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(0, 400))
contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(0, 400))
contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(0, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(0, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), border = NA)
filled.contour
source('~/.active-rstudio-document')
fc2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), border = NA)
?rect
fc2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), border = NULL)
fc2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), border = NA)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
fc2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
fc2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), add = T)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
filled.contour2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), add = T)
source('~/.active-rstudio-document')
filled.contour2(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250), add = T)
.filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
?filled.com
?filled.contour
.filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]))#, col = topo.colors(10), nlevels = 10, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(50), nlevels = 50, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(5), nlevels = 5, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(100), nlevels = 100, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(500), nlevels = 500, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(200), nlevels = 200, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
filled.contour(time, as.numeric(colnames(smps)[5:111]), as.matrix(smps[, 5:111]), col = topo.colors(100), nlevels = 100, ylab = 'Diameter (nm)', xlab = 'Time', main = 'p/cc vs. Time & Diameter', ylim = c(15, 250))
library(fields)
install.packages("fields")
image.plot(smps[, 5:111])
library(fields)
image.plot(smps[, 5:111])
View(smps)
?image.plot
imagecontour(smps[, 5:111], add = TRUE)
image.plot(smps[1:2, 5:111])
image.plot(smps[1:2, 5:6])
image.plot(as.matrix(smps[1:2, 5:6]))
image.plot(as.matrix(smps[1:2, 5:111]))
image.plot(as.matrix(smps[, 5:111]))
imagecontour(as.matrix(smps[, 5:111]), add = TRUE)
image.contour(as.matrix(smps[, 5:111]), add = TRUE)
contour(as.matrix(smps[, 5:111]), add = TRUE)
image.plot(as.matrix(smps[, 5:111]))
axis(1, at=time)
image.plot(as.matrix(smps[, 5:111]), axes = F)
axis(1, at=time)
image.plot(as.matrix(smps[, 5:111]), axes = F)
?axis
?image.plot
image.plot(as.matrix(smps[, 5:111]), axis.args = list(at = time, labels = time))
image.plot(as.matrix(smps[, 5:111]))
1
image.plot(as.matrix(smps[, 5:111]))
axis(1,axTicks(1),lab=letters[1:length(axTicks(1))])
image.plot(as.matrix(smps[, 5:111]),axes = F)
axis(1,axTicks(1),lab=letters[1:length(axTicks(1))])
axis(1)
box()
image(as.matrix(smps[, 5:111]),axes = F)
axis(1)
box()
image(as.matrix(smps[, 5:111]),axes = F)
axis(1,axTicks(1),lab=letters[1:length(axTicks(1))])
box()
axis(1,axTicks(1),lab=time[1:length(axTicks(1))])
require(psych)
read.clipboard(header = F)[, 2]
mean(read.clipboard(header = F)[, 2])
mean(read.clipboard(header = F)[, 2])
mean(read.clipboard(header = F)[, 2])
require(psych)
read.clipboard.tab()
read.clipboard()
read.clipboard()[,2]
mean(read.clipboard()[,2])
low <- mean(read.clipboard()[,2])
high <- mean(read.clipboard()[,2])
low/high
high/low
(high-low)/low
abs(high-low)/mean(high, low)
abs(high-low)/mean(high, low)*100
low <- mean(read.clipboard()[,2])
require(CavSpec)
litSpectrum("He")
litSpectrum("CO2", version = 'Sneep')[,2] - litSpectrum("N2", version = 'Sneep')[,2]
l <- litSpectrum("N2")[, 1]
x <- litSpectrum("N2")[, 1]
y <- litSpectrum("CO2", version = 'Sneep')[,2] - litSpectrum("N2", version = 'Sneep')[,2]
plot(x, y, type = 'l')
magplot(x, y, type = 'l', col = 'red',
x)
require(magicaxis)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
ylim = c(0, 10),
)
require(magicaxis)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
ylim = c(0, 20),
)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
ylim = c(0, 50),
)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
ylim = c(0, 100),
)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
ylim = c(0, 100), log = 'y',
)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
log = 'y',
)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850),
ylim = c(1, 200), log = 'y',
)
magplot(x, y*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
magplot(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, type = 'l', col = 'red',
xlim = c(350, 850), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
magplot(x, y*2.5e19*1e8, type = 'l', col = 'forestgreen',
xlim = c(350, 850), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'red')
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
magplot(x, y*2.5e19*1e8, type = 'l', col = 'forestgreen',
xlim = c(700, 800), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'red')
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
magplot(x, y*2.5e19*1e8, type = 'l', col = 'forestgreen',
xlim = c(781, 800), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'red')
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
magplot(x, y*2.5e19*1e8, type = 'l', col = 'forestgreen',
xlim = c(405, 800), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'red')
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
magplot(x, y*2.5e19*1e8, type = 'l', col = 'forestgreen',
xlim = c(365, 800), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'red')
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
magplot(x, y*2.5e19*1e8, type = 'l', col = 'forestgreen',
xlim = c(440, 800), xaxs = 'i',
ylim = c(1, 200), log = 'y', yaxs = 'i',
)
lines(x, litSpectrum("CO2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'red')
lines(x, litSpectrum("N2", version = 'Sneep')[,2]*2.5e19*1e8, col = 'blue')
ms <- read.table("~/Desktop/new_mirror_665.txt", quote="\"", comment.char="")
View(ms)
plot(ms$V3, ms$V6, type = 'l')
plot(ms$V3, ms$V6, type = 'l', xlim = c(500, 750))
plot(ms$V3, ms$V6, type = 'l', xlim = c(500, 700))
require(psych)
FBH650-40 <- read.clipboard.csv(header=F)
FBH650.40 <- read.clipboard.csv(header=F)
plot(ms$V3, ms$V6, type = 'l', col = 'red', lwd = 4,
xlim = c(500, 700), xaxs = 'i'
)
par(new = T)
plot(FBH650.40[, 1], FBH650.40[, 3], type = 'l', col = 'black', lwd = 4,
xlim = c(500, 700), xaxs = 'i'
)
View(FBH650.40)
FBH650.40 <- read.clipboard.tab(header=F)
FBH650.40 <- read.clipboard.csv(header=F, sep= ' ')
FBH650.40 <- read.clipboard(header=F, sep= ' ')
FBH650.40 <- read.clipboard(header=F, sep= '\t')
FBH650.40 <- read.clipboard(header=F, sep= '\t')
View(FBH650.40)
par(new = T)
plot(FBH650.40[, 1], FBH650.40[, 3], type = 'l', col = 'black', lwd = 4,
xlim = c(500, 700), xaxs = 'i'
)
ms <- read.table("~/Desktop/new_mirror_665.txt", quote="\"", comment.char="")
plot(ms$V3, ms$V6, type = 'l', col = 'red', lwd = 4,
xlim = c(500, 700), xaxs = 'i',
ylim = c(0, 64000), yaxs = 'i'
)
par(new = T)
plot(FBH650.40[, 1], FBH650.40[, 3], type = 'l', col = 'black', lwd = 4,
xlim = c(500, 700), xaxs = 'i',
ylim = c(0, 100), yaxs = 'i'
)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ms <- read.table("~/Desktop/new_mirror_665.txt", quote="\"", comment.char="")
plot(ms$V3, ms$V6, type = 'l', col = 'red', lwd = 4,
xlim = c(500, 700), xaxs = 'i', xlab = 'wavelength (nm)',
ylim = c(0, 64000), yaxs = 'i', ylab = 'Intensity'
)
par(new = T)
plot(FBH650.40[, 1], FBH650.40[, 3], type = 'l', col = 'black', lwd = 4,
xlim = c(500, 700), xaxs = 'i', xlab = 'wavelength (nm)',
ylim = c(0, 100), yaxs = 'i',
axes = F, ylab = ' ', xlab = ' '
)
source('~/.active-rstudio-document')
axis(4)
par(mar = c(5, 5, 2, 5))
plot(ms$V3, ms$V6, type = 'l', col = 'red', lwd = 4,
xlim = c(500, 700), xaxs = 'i', xlab = 'wavelength (nm)',
ylim = c(0, 64000), yaxs = 'i', ylab = 'Intensity'
)
par(new = T)
plot(FBH650.40[, 1], FBH650.40[, 3], type = 'l', col = 'black', lwd = 4,
xlim = c(500, 700), xaxs = 'i',
ylim = c(0, 100), yaxs = 'i',
axes = F, ylab = ' ', xlab = ' '
)
axis(4)
mtext('% T', line = 3)
mtext('% T', line = 1)
mtext('% T', line = 1, side = 4)
mtext('% T', line = 3, side = 4)
source('~/.active-rstudio-document')
newport <- read.clipboard(header=F, sep= '\t')
View(newport)
lines(newport, col = 'blue', lwd = 4)
View(newport)
lines(newport[, 1], newport[, 2]*100, col = 'blue', lwd = 4)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
require(psych)
read.clipboard.csv()
read.clipboard.csv()
read.clipboard()
plot(read.clipboard())
plot(read.clipboard(), type = 'l')
plot(read.clipboard(), type = 'l')
plot(read.clipboard(), type = 'l')
plot(read.clipboard(), type = 'l', xlim = c(670, 700))
plot(read.clipboard(), type = 'l', xlim = c(670, 700), ylab = 'xsection', xlab = 'nm')
plot(read.clipboard(), type = 'l', xlim = c(670, 700), ylab = 'xsection', xlab = 'nm')
plot(read.clipboard(), type = 'l', xlim = c(680, 700), ylab = 'xsection', xlab = 'nm')
source('~/.active-rstudio-document')
plot(y)
source('~/.active-rstudio-document')
y
y[1:15]*100
y[1:50]*100
plot(y)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
y[1:15]
y[1:15]*100
y[1:25]*100
require(psych)
ozone <- read.clipboard()
ozone2 <- data.frame(ozone[,2], ozone[,1])
ozone <- ozone2
rm(ozone2)
require(magicaxis)
magplot(ozone)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
abline(fit)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
coef(fit)[1]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
seq(0, 5e-6, length = 100)
lines(seq(0, 5e-6, length = 100), seq(0, 5e-6, length = 100), lty = 'dashed')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Dropbox/NO2_Calibration_20160919/NO2_Calibration_20160919.R')
source('~/Dropbox/NO2_Calibration_20160919/NO2_Calibration_20160919.R')
source('~/.active-rstudio-document')
summary(fit)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
y <- 30*(0:1200)^-50
plot(0:1200, y)
y <- 30*(0:120)^-50
x<0:120
y <- 30*(0:120)^-50
x <- 0:120
y <- 30*x^-50
plot(x, y)
x <- 0:120
y <- 30*x*exp(-50)
plot(x, y)
x <- 0:120
y <- 30*exp(-50*x)
plot(x, y)
x <- 0:120
y <- 30*exp(-x/50)
plot(x, y)
x <- 0:500
y <- 30*exp(-x/50)
plot(x, y)
x <- 0:400
y <- 30*exp(-x/50)
plot(x, y)
x[300]
y[300]
x <- 0:(6*60)
y <- 30*exp(-x/50)
plot(x, y)
x <- 0:(4*60)
y <- 30*exp(-x/50)
plot(x, y)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library("RAtmosphere", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
SZA("2016-10-19 10:38:30")
SZA("2016-10-19 10:38:30" - 1)
SZA("2016-10-19 10:38:30", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 10:38:30", Lon = 33.948223, Lat = -83.37375)
SZA("2016-10-19 10:38:30", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 10:38:30 EST", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 10:38:30 UTC", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-18 10:38:30 EST", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 10:38:30 UTC", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 10:52:30 UTC", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 11:09:30 UTC", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 11:26:30 UTC", Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 11:26:30 EST", Lat = 33.948223, Lon = -83.37375)
SZA(as.POSIXct("2016-10-19 11:26:30"), Lat = 33.948223, Lon = -83.37375)
SZA("2016-10-19 11:09:30 EST", Lat = 33.948223, Lon = -83.37375)
SZA(as.POSIXct("2016-10-19 11:09:30"), Lat = 33.948223, Lon = -83.37375)
SZA(as.POSIXct("2016-10-19 10:52:30"), Lat = 33.948223, Lon = -83.37375)
SZA(as.POSIXct("2016-10-19 10:38:30"), Lat = 33.948223, Lon = -83.37375)
require(psych)
read.clipboard()
read.clipboard(sep = '\t')
read.clipboard(sep = '  ')
read.clipboard(sep = ' ')
require(CavSpec)
litSpectrum("N2")
litSpectrum("N2")[1, ]
litSpectrum("N2")[1000, ]
a <- litSpectrum("N2")[1000, ]
litSpectrum("N2")[1400, ]
litSpectrum("N2")[1550, ]
b = litSpectrum("N2")[1550, ]
a/b
1.2e-12
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("ggplot2")
install.packages("magicaxis")
install.packages("dplyr")
install.packages("psych")
install.packages("zoo")
install.packages("devtools")
install.packages("plotly")
install.packages("readr")
require(bookdown)
setwd("~/Documents/bookdown1")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?gitbook
gitbook(fig_caption = TRUE, number_sections = TRUE,
self_contained = FALSE, lib_dir = "libs",
split_by = c("chapter", "chapter+number", "section",
"section+number", "rmd", "none"), split_bib = TRUE,
config = list())
gitbook(fig_caption = TRUE, number_sections = TRUE,
self_contained = FALSE, lib_dir = "libs",
split_by = c("chapter", "chapter+number", "section",
"section+number", "rmd", "none"), split_bib = TRUE,
config = list())
bookdown::render_book("book1.Rmd", "bookdown::gitbook")
setwd("~/Dropbox/manual_MultiPAS")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
knitr::include_graphics("./images/warning_generic.png")
knitr::include_graphics("/images/warning_generic.png")
knitr::include_graphics("/images/warning_generic.png")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
knitr::include_graphics("./images/warning_generic.png")
knitr::include_graphics("./images/warning_generic.png")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
knitr::include_graphics("./images/warning_generic.png")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
knitr::include_graphics("./images/warning_generic.png", fig.height = 25mm)
knitr::include_graphics("./images/warning_generic.png", fig.height = 25)
?include_graphics
knitr::include_graphics("./images/warning_generic.png", out.width = 25)
knitr::include_graphics("./images/warning_generic.png")
knitr::include_graphics("./images/warning_generic.png")
knitr::include_graphics("./images/warning_generic.png")
knitr::include_graphics("./images/warning_generic.png")
knitr::include_graphics("./images/warning_generic.png")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
unlink('01_safetyInformation_cache', recursive = TRUE)
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
bookdown::render_book("MultiPAS_manual.Rmd", "bookdown::gitbook")
knitr::include_graphics("./images/multiPAS.png")
unlink('index_cache', recursive = TRUE)
require(bookdown)
require(bookdown)
knitr::include_graphics("./images/pumpTrimPot.jpg")
knitr::include_graphics("./images/pumpTrimPot.jpg")
require(bookdown)
bookdown::publish_book()
bookdown::publish_book()
bookdown::publish_book(account = alphonse)
bookdown::publish_book(account = 'alphonse')
bookdown::publish_book()
bookdown::publish_book(accout = 'Al Fischer (alphonse)')
bookdown::publish_book(accout = 'Al Fischer')
bookdown::publish_book(account = 'Al Fischer (alphonse)')
bookdown::publish_book(account = 'Al Fischer')
bookdown::publish_book(account = 'alphonse')
bookdown::publish_book(account = 'alphonse: bookdown')
bookdown:::serve_book()
install.packages("servr")
bookdown:::serve_book()
gitbook()
bookdown::render_book("manual.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# Install the devtools package and then load it
install.packages('devtools')
library(devtools)
# Now, use it to install aeRo and then load aeRo
install_github('alphonse/aeRo')
library(aeRo)
ls('package:aeRo')
ls('package:aeRo')
library(dplyr)
setwd("/Volumes/CHEM/Groups/Smith_G/MultiPAS-IV/ambient/20170303")
pas <- importPAS('pas.txt', no.cols = 18) %>%
# chooseFilterStart()  ## typically uncommented, for graphical interface
chooseFilterStart(graph = FALSE, start = 1430) ## only used when start point is already known, comment otherwise.
# Display a few rows as an example
head(pas)
convertToAbs()
?convertToAbs
install.packages("rmarkdown")
install.packages("bookdown")
